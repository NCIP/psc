<project name="caBIG Study Calendar" default="compile">
    <property name="src-dir.main"      value="src"/>
    <property name="src-dir.unit-test" value="test/unit"/>

    <property name="build-dir.main"      value="web/WEB-INF/classes"/>
    <property name="build-dir.unit-test" value="build/test-classes"/>

    <path id="cp.main">
        <pathelement location="${build-dir.main}"/>
        <fileset dir="web/WEB-INF/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="cp.unit-test">
        <path refid="cp.main"/>
        <pathelement location="${build-dir.unit-test}"/>
        <fileset dir="test/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="init" depends="default-properties">
        <mkdir dir="${build-dir.main}"/>
        <mkdir dir="${build-dir.unit-test}"/>
        
        <property name="config.database.file" value="db/${config.database}.properties"/>
        <fail message="Database not configured (could not read ${config.database.file}.).  See db/readme.txt.">
            <condition>
                <not><available file="${config.database.file}"/></not>
            </condition>
        </fail>
    </target>

    <target name="default-properties">
        <property name="test.failfast" value="true"/>
        <property name="config.database" value="studycalendar"/>
    </target>

    <target name="clean">
        <delete dir="build"/>
        <delete dir="${build-dir.main}"/>
    </target>

    <target name="compile" description="Compile all java source" depends="init">
        <javac destdir="${build-dir.main}" classpathref="cp.main" 
               debug="true" source="1.5">
            <src path="${src-dir.main}"/>
        </javac>
        <javac destdir="${build-dir.unit-test}" classpathref="cp.unit-test"
               debug="true" source="1.5">
            <src path="${src-dir.unit-test}"/>
        </javac>
    </target>
    
    <!-- TEST SETUP & EXECUTION -->

    <target name="test.unit.select-all">
        <property name="unit-test.pattern" value="**/*Test.java"/>
    </target>

    <target name="test.unit.select-database">
        <property name="unit-test.pattern" value="**/dao/**/*Test.java"/>
    </target>

    <target name="test.unit" description="Run unit tests" depends="compile, test.unit.select-all">
        <echo>Executing unit tests: ${unit-test.pattern}</echo>
        <junit haltonfailure="${test.failfast}" fork="true" forkmode="once" dir="${basedir}">
            <classpath refid="cp.unit-test"/>
            <jvmarg value="-Xmx256m"/>
            <jvmarg value="-Djava.awt.headless=true"/>
            <formatter type="plain" usefile="false"/>
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${build-dir.unit-test}/junit">
                <fileset dir="${src-dir.unit-test}">
                    <include name="${unit-test.pattern}"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    
    <target name="create-hsqldb">
        <echo>TODO: set up Schemamule</echo>
    </target>
    
    <target name="emma">
        <echo>TODO: set up Emma</echo>
    </target>

    <!-- CRUISE CONTROL BUILDS -->
    
    <target name="oracle">
        <property name="config.database" value="oracle"/>
    </target>
    <target name="postgresql">
        <property name="config.database" value="postgresql"/>
    </target>
    <target name="hsqldb">
        <property name="config.database" value="hsqldb"/>
    </target>
    
    <target name="cruise.properties">
        <!-- overrides properties set in default-properties -->
        <property name="test.failfast" value="false"/>
    </target>

    <target name="cruise.exec" depends="clean, emma, test.unit"/>
    
    <target name="cruise.artifacts">
        <mkdir dir="build/artifacts"/>
        <echo>TODO: copy artifacts</echo>
    </target>

    <target name="cruisecontrol-full" description="CruiseControl build for all unit tests against HSQLDB"
        depends="cruise.properties, hsqldb, create-hsqldb, cruise.exec, cruise.artifacts"/>

    <target name="cruisecontrol-oracle" description="CruiseControl build for db-only unit tests against Oracle"
        depends="cruise.properties, oracle, cruise.exec"/>

    <target name="cruisecontrol-postgresql" description="CruiseControl build for db-only unit tests against PostgreSQL"
        depends="cruise.properties, postgresql, cruise.exec"/>

</project>