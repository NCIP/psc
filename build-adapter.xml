<?xml version="1.0" encoding="utf-8" ?>

<project name="caBIG Study Calendar" default="build:war" basedir=".">
    <description>Builds, tests, and runs the project psc.</description>
    <property name="download" value="${basedir}/temp/download"/>
    <property name="jruby.binaries.file" value="jruby-bin-1.3.0.zip"/>
    <property name="jruby.src.url" value="http://dist.codehaus.org/jruby/1.3.0/${jruby.binaries.file}"/>
    <property name="jruby.binaries.relative.dir" value="${download}/jruby-1.3.0"/>
    <property name="jruby.dest.file" value="${download}/${jruby.binaries.file}"/>
    <property name="path.to.jruby.bin" value="${jruby.binaries.relative.dir}/bin/jruby"/>
    <property name="path.to.jruby.bat" value="${jruby.binaries.relative.dir}/bin/jruby.bat"/>
    <property name="path.to.jruby.gems" value="${jruby.binaries.relative.dir}/lib/ruby/gems/1.8/gems"/>
    <property name="unixfamily" value="Linux,Mac OS X,Mac OS,HP UX,Digital Unix"/>
    <property name="windowsfamily" value="Windows 2000,Windows 98,Windows NT,Windows Vista,Windows XP" />
    <property environment="env"/>
    <property name="tomcat.relative.path" value="${env.CATALINA_HOME}"/>
    <available file="${jruby.binaries.relative.dir}" property="jruby.exists" />

 <!--Standard sub project build TARGETS -->
    <target name="install"
        depends="install:gem:buildr,install:gem:shenandoah,install:gem:facets,install:gem:json_pure,install:gem:rest-client"
        description="Downloads JRuby and installs required gems">
    </target>

    <target name="install:jruby" unless="jruby.exists" description="Downloads jruby">
        <mkdir dir="${basedir}/temp/download"/>
        <get src="${jruby.src.url}" dest="${jruby.dest.file}"/>
        <unzip dest="${download}" src="${jruby.dest.file}" />
        <echo message="Downloaded JRuby sucessfully"/>
        <exec executable="chmod" os="${unixfamily}" failonerror="true">
            <arg line="u+x ${path.to.jruby.bin}"/>
        </exec>
        <delete dir="${jruby.dest.file}"/>
    </target>

    <macrodef name="jruby" description="Executes a command using the jruby script">
        <attribute name="line" description="the command line to pass to jruby (not including jruby itself)"/>
        <element name="envs" implicit="yes" optional="true"/>
        <sequential>
            <echo>jruby @{line}</echo>
            <exec executable="${path.to.jruby.bin}" os="${unixfamily}" failonerror="true">
                <arg line="@{line}"/>
                <envs/>
            </exec>
            <exec executable="cmd" dir="." os="${windowsfamily}" failonerror="true">
                <arg line="/c ${path.to.jruby.bat} @{line}"/>
                <envs/>
            </exec>
        </sequential>
    </macrodef>

    <!-- The two gem macros have to be separate because ant doesn't let you macrodef targets -->
    <macrodef name="gem_available">
        <attribute name="name"/>
        <attribute name="path" default="@{name}-${gems.@{name}.version}"
            description="the path within the jruby gems directory where the gem will be if it is already installed"/>
        <sequential>
            <echo level="verbose">gem_available name=@{name} path=@{path}</echo>
            <available file="${path.to.jruby.gems}/@{path}" property="@{name}.exists"/>
        </sequential>
    </macrodef>
    <macrodef name="install_gem">
        <attribute name="name"/>
        <sequential>
            <echo level="verbose">install_gem name=@{name} version=${gems.@{name}.version}</echo>
            <jruby line="-S gem install @{name} -v ${gems.@{name}.version} --no-rdoc --no-ri"/>
        </sequential>
    </macrodef>

    <property name="gems.buildr.version" value="1.3.3"/>
    <gem_available name="buildr" path="buildr-1.3.3-java"/>
    <target name="install:gem:buildr" unless="buildr.exists" depends="install:jruby" description="Installs buildr gem">
        <install_gem name="buildr"/>
    </target>

    <property name="gems.shenandoah.version" value="0.0.0"/>
    <gem_available name="shenandoah"/>
    <target name="install:gem:shenandoah" unless="shenandoah.exists" depends="install:jruby" description="Installs shenandoah gem">
        <install_gem name="shenandoah"/>
    </target>

    <property name="gems.facets.version" value="2.4.5"/>
    <gem_available name="facets"/>
    <target name="install:gem:facets" unless="facets.exists" depends="install:jruby" description="Installs facets gem">
        <install_gem name="facets"/>
    </target>

    <property name="gems.json_pure.version" value="1.1.9"/>
    <gem_available name="json_pure"/>
    <target name="install:gem:json_pure" unless="json_pure.exists" depends="install:jruby" description="Installs json_pure gem">
        <install_gem name="json_pure"/>
    </target>

    <property name="gems.rest-client.version" value="1.0.3"/>
    <gem_available name="rest-client"/>
    <target name="install:gem:rest-client" unless="rest-client.exists" depends="install:jruby" description="Installs rest-client gem">
        <install_gem name="rest-client"/>
    </target>

    <target name="build:war" depends="install">
        <exec executable="${path.to.jruby.bin}" os="${unixfamily}" failonerror="true">
            <arg line="-S buildr build test=no"/>
        </exec>
        <exec executable="cmd" dir="." os="${windowsfamily}" failonerror="true">
            <arg line="/c ${path.to.jruby.bat} -S buildr build test=no"/>
        </exec>
    </target>

    <target name="deploy:psc:webapp" description="Deploy pre-built war file">
        <delete dir="${tomcat.relative.path}/webapps/psc.war" />
        <copy todir="${tomcat.relative.path}/webapps" file="${basedir}/web/target/psc.war"/>
    </target>

    <target name="build:deploy:psc:webapp" depends="build:war" description="Build and Deploy war file ">
        <delete dir="${tomcat.relative.path}/webapps/psc.war" />
        <copy todir="${tomcat.relative.path}/webapps" file="${basedir}/web/target/psc.war"/>
    </target>

    <target name="build:grid" depends="install" description="Build psc grid services">
        <exec executable="${path.to.jruby.bin}" os="${unixfamily}" failonerror="true">
            <arg line="-S buildr psc:grid:package wsrf_dir_name=wsrf-psc test=no"/>
            <env key="CCTS_HOME" value="${ccts.common.grid.src.dir}"/>
            <env key="GLOBUS_LOCATION" value="${env.GLOBUS_LOCATION}"/>
        </exec>
        <exec executable="cmd" dir="." os="${windowsfamily}" failonerror="true">
            <arg line="/c ${path.to.jruby.bat} -S buildr psc:grid:package wsrf_dir_name=wsrf-psc test=no"/>
            <env key="CCTS_HOME" value="${ccts.common.grid.src.dir}"/>
            <env key="GLOBUS_LOCATION" value="${env.GLOBUS_LOCATION}"/>
        </exec>
    </target>

    <target name="deploy:psc:grid" depends="install" description="Deploy psc grid services">
        <exec executable="${path.to.jruby.bin}" os="${unixfamily}" failonerror="true">
            <arg line="-S buildr psc:grid:deploy_with_globus test=no wsrf_dir_name=wsrf-psc"/>
            <env key="CATALINA_HOME" value="${tomcat.relative.path}"/>
            <env key="CCTS_HOME" value="${ccts.common.grid.src.dir}"/>
            <env key="GLOBUS_LOCATION" value="${env.GLOBUS_LOCATION}"/>
        </exec>
        <exec executable="cmd" dir="." os="${windowsfamily}" failonerror="true">
            <arg line="/c ${path.to.jruby.bat} -S buildr psc:grid:deploy_with_globus test=no wsrf_dir_name=wsrf-psc"/>
            <env key="CATALINA_HOME" value="${tomcat.relative.path}"/>
            <env key="CCTS_HOME" value="${ccts.common.grid.src.dir}"/>
            <env key="GLOBUS_LOCATION" value="${env.GLOBUS_LOCATION}"/>
        </exec>
    </target>

    <target name="clean" depends="install">
        <exec executable="${path.to.jruby.bin}" os="${unixfamily}" failonerror="true">
            <arg line="-S buildr clean"/>
        </exec>
        <exec executable="cmd" dir="." os="${windowsfamily}" failonerror="true">
            <arg line="/c ${path.to.jruby.bat} -S buildr clean"/>
        </exec>
    </target>

    <target name="clean-download">
        <delete dir="${download}" />
    </target>
</project>