<project name="study-consumer">

    <property environment="env"/>

    <property name="src.dir" value="src/java"/>
    <property name="build.dir" value="build/classes"/>
    <property name="lib.dir" value="lib"/>
    <property name="ext.lib.dir" value="ext/lib"></property>

    <property name="test.src.dir" value="test/${src.dir}"/>
    <property name="test.build.dir" value="test/${build.dir}"/>
    <property name="test.lib.dir" value="test/${lib.dir}"/>
    <property name="test.report.dir" value="test/report"/>
    <property name="jar.name" value="psc-study-consumer.jar"/>

    <property name="deploy.lib.dir" value="${env.CATALINA_HOME}/webapps/wsrf/WEB-INF/lib"/>
    <property name="deploy.etc.ext.dir"
              value="${env.CATALINA_HOME}/webapps/wsrf/WEB-INF/etc/cagrid_AdverseEventConsumer"/>

    <!--taskdef name="dbunit" classname="org.dbunit.ant.DbUnitTask"  resource="lib/dbunit-2.1.jar" > </taskdef-->


    <target name="get-jars">

        <mkdir dir="ext/lib"/>
        <ant dir="../.." antfile="build.xml" target="compile" inheritAll="false"/>
        <jar basedir="../../src/main/webapp/WEB-INF/classes" destfile="ext/lib/psc.jar" includes="**/*"/>

        <copy todir="ext/lib" overwrite="true">
            <!--
            <fileset dir="../lib">
                <include name="clm.jar"/>
                <include name="csmapi.jar"/>
            </fileset>
            -->

            <fileset dir="../../src/main/webapp/WEB-INF/lib">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="checkGlobus" depends="setGlobus">
        <condition property="globus.not.found">
            <or>
                <not>
                    <isset property="ext.globus.dir"/>
                </not>
                <equals arg1="${ext.globus.dir}" arg2=""/>
            </or>
        </condition>
        <fail message="Globus installation is not set in either GLOBUS_LOCATION or ext.globus.dir"
              if="globus.not.found"/>
        <echo message="Globus: ${ext.globus.dir}"/>
    </target>

    <target name="setGlobus" if="env.GLOBUS_LOCATION">
        <property name="ext.globus.dir" value="${env.GLOBUS_LOCATION}"/>
    </target>

    <target name="defineClasspaths">
        <path id="compile.cp">
            <fileset dir="${ext.lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${ext.globus.dir}/lib">
                <include name="*.jar"/>
            </fileset>
            <pathelement location="../../tools/tomcat/lib/common/servlet-api.jar"/>
        </path>

        <path id="test.compile.cp">
            <pathelement location="test/resources"/>
            <path refid="compile.cp"/>
            <fileset dir="${test.lib.dir}">
                <include name="*.jar"/>
            </fileset>

            <pathelement location="${build.dir}"/>

        </path>

        <path id="test.run.cp">
            <path refid="test.compile.cp"/>
            <pathelement location="${test.build.dir}"/>
        </path>
    </target>

    <target name="compile" depends="checkGlobus, get-jars, defineClasspaths">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true">
            <classpath refid="compile.cp"/>
        </javac>
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="compileTests" depends="compile">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" debug="true">
            <classpath refid="test.compile.cp"/>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <jar basedir="${build.dir}" destfile="${jar.name}"/>
    </target>

    <target name="deploy" depends="jar">
        <copy todir="${deploy.lib.dir}" overwrite="true">
            <fileset dir=".">
                <include name="${jar.name}"/>
            </fileset>
            <fileset dir="${ext.lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <copy todir="${deploy.etc.ext.dir}" overwrite="true">
            <fileset dir="etc">
                <include name="*"/>
            </fileset>
        </copy>
    </target>


    <target name="test" depends="compileTests">
        <mkdir dir="${test.report.dir}"/>

        <!-- antcall target="insertTestData"/ -->

        <junit printsummary="yes" showoutput="true">

            <jvmarg value="-Dgov.nih.nci.security.configFile=/Users/joshua/packages/tomcat/for_psc/apache-tomcat-5.5.20/conf/cabig/ApplicationSecurityConfig.xml"/>
            <jvmarg value="-Djava.security.auth.login.config=/Users/joshua/packages/tomcat/for_psc/apache-tomcat-5.5.20/conf/cabig/csm_jaas.config"/>

            <classpath refid="test.run.cp"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${test.report.dir}">
                <fileset dir="${test.src.dir}">
                    <include name="**/Test*.java"/>
                    <include name="**/*TestCase.java"/>
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${test.report.dir}">
            <fileset dir="${test.report.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.report.dir}"/>
        </junitreport>

        <!-- antcall target="deleteTestData"/ -->

    </target>

    <target name="insertTestData">
        <dbunit driver="org.postgresql.Driver" url="jdbc:postgresql:study_calendar" userid="postgres"
                password="postgres">

            <classpath>
                <fileset dir="../../db/lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>

            <operation type="CLEAN_INSERT" transaction="true"
                       src="test/resources/test_data.xml"
                    />

        </dbunit>
    </target>

    <target name="deleteTestData">
        <dbunit driver="org.postgresql.Driver" url="jdbc:postgresql:study_calendar" userid="postgres"
                password="postgres">

            <classpath>
                <fileset dir="../../db/lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>

            <operation type="DELETE" transaction="true"
                       src="test/resources/test_data.xml"
                    />

        </dbunit>
    </target>

    <target name="clean">

        <delete dir="build"/>
        <delete file="${jar.name}"/>
        <delete dir="test/build"/>

    </target>

    <!--targets for deploying grid services-->

    <target name="get-study-consumer" depends="get-study-consumer-jar,update-wsdd"
            description="create study consumer wsrf and update the server-config.wsdd">
     </target>

    <target name="get-study-consumer-jar" depends="jar,checkCCTS,checkGlobus,checkGridServiceDeployDir"
            description="create study consumer wsrf ">


        <!--<subant buildpath="${env.GLOBUS_LOCATION}" antfile="share/globus_wsrf_common/tomcat/tomcat.xml"-->
        <!--target="deployTomcat"-->
        <!--inheritAll="false">-->
        <!--<property name="tomcat.dir" value="${env.CATALINA_HOME}"></property>-->

        <!--</subant>-->

     
        <ant dir="${env.CCTS_HOME}/StudyConsumerGridService" antfile="build.xml"
                    target="deployTomcat" inheritAll="false"/>

        <copy todir="${env.CATALINA_HOME}/webapps/wsrf/WEB-INF/lib" overwrite="true">

            <fileset dir="ext/lib">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="">
                <include name="${jar.name}"/>
            </fileset>

        </copy>
    </target>
    <target name="checkCCTS" depends="setCCTS">
        <condition property="ccts.not.found">
            <or>
                <not>
                    <isset property="ext.ccts.dir"/>
                </not>
                <equals arg1="${ext.ccts.dir}" arg2=""/>
            </or>
        </condition>
        <fail message="ccts installation is not set in either CCTS_HOME or ext.ccts.dir"
              if="ccts.not.found"/>
        <echo message="CCTS: ${ext.ccts.dir}"/>
    </target>

    <target name="setGridServiceDeployDir" if="env.CATALINA_HOME">
        <property name="catalina.home.dir" value="${env.CATALINA_HOME}"/>
    </target>

    <target name="checkGridServiceDeployDir" depends="setGridServiceDeployDir">
        <condition property="catalina.not.found">
            <or>
                <not>
                    <isset property="catalina.home.dir"/>
                </not>
                <equals arg1="${catalina.home.dir}" arg2=""/>
            </or>
        </condition>
        <fail message="tomcat installation is not set in either CATALINA_HOME or catalina.home.dir"
              if="catalina.not.found"/>
        <echo message="Catalina: ${catalina.home.dir}"/>
    </target>

    <target name="setCCTS" if="env.CCTS_HOME">
        <property name="ext.ccts.dir" value="${env.CCTS_HOME}"/>
    </target>


    <path id="xml-task-dir">
        <fileset dir="../../test/infrastructure/lib">
            <include name="**/*.jar"/>
        </fileset>
    </path>


    <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpathref="xml-task-dir"/>

    <target name="update-wsdd">
        <xmltask source="${env.CATALINA_HOME}/webapps/wsrf/WEB-INF/etc/cagrid_StudyConsumer/server-config.wsdd"
                 dest="${env.CATALINA_HOME}/webapps/wsrf/WEB-INF/etc/cagrid_StudyConsumer/server-config.wsdd"
                 failWithoutMatch="true">
            <insert path="/:deployment/:service" position="before">
                <![CDATA[
      <handler xmlns="http://xml.apache.org/axis/wsdd/"  name="auditInfoRequestHandler"
        type="java:edu.northwestern.bioinformatics.studycalendar.grid.AuditInfoRequestHandler"/>

    <handler xmlns="http://xml.apache.org/axis/wsdd/"  name="auditInfoResponseHandler"
        type="java:edu.northwestern.bioinformatics.studycalendar.grid.AuditInfoResponseHandler"/>
      ]]>
            </insert>
        </xmltask>

        <xmltask source="${env.CATALINA_HOME}/webapps/wsrf/WEB-INF/etc/cagrid_StudyConsumer/server-config.wsdd"
                 dest="${env.CATALINA_HOME}/webapps/wsrf/WEB-INF/etc/cagrid_StudyConsumer/server-config.wsdd"
                 failWithoutMatch="true">
            <insert path="/:deployment/:service">
                <![CDATA[
      <requestFlow xmlns="http://xml.apache.org/axis/wsdd/" >
            <handler type="auditInfoRequestHandler"/>
        </requestFlow>
        <responseFlow xmlns="http://xml.apache.org/axis/wsdd/" >
            <handler type="auditInfoResponseHandler"/>
        </responseFlow>
      ]]>
            </insert>
        </xmltask>

    </target>


</project>
