<?xml version="1.0"?>
<project name="build-deploy file" basedir="." default="deploy">
	<property file="deploy.properties" />
	<property name="service.deployment.path" value="${service.deployment.prefix}/${introduce.skeleton.service.name}" />
	<pathconvert dirsep="_" property="service.deployment.dir.name">
		<path>
			<pathelement path="${service.deployment.path}" />
		</path>
		<map from="${basedir}\" to="" />
		<map from="${basedir}/" to="" />
	</pathconvert>
	
	
	<property name="service.properties.file" value="service.properties"/>
	
	<!-- Tomcat Properties -->
	<property name="tomcat.dir" value="${env.CATALINA_HOME}" />
	<property name="tomcat.common.lib.dir" value="${tomcat.dir}/common/lib" />
	<property name="tomcat.deploy.dir" value="${tomcat.dir}/webapps/wsrf/WEB-INF" />
	<property name="tomcat.deploy.lib.dir" value="${tomcat.deploy.dir}/lib" />
	<property name="tomcat.wsrf.schema.dir" value="${tomcat.dir}/webapps/wsrf/share/schema" />
	
	<property name="gar.name" value="${service.deployment.dir.name}.gar" />
	
	<!-- Filesets -->
	<!-- JARs to be included in the GAR file -->
	<fileset dir="${build.lib.dir}" id="garjars" />
	<property name="garjars.id" value="garjars" />
	
	<!-- Schema files (WSDL, XSD, etc.) to be included in the GAR file -->
	<fileset dir="${schema.dest}" id="garschema">
		<include name="${schema.path}/**/*" />
	</fileset>
	<property name="garschema.id" value="garschema" />
	
	<!-- Configuration files (security, etc.) to be included in the GAR file -->
	<property name="garetc.id" value="garetc" />
	<fileset dir="tmp/etc" id="garetc" />
	
	
	<!-- ============================================================== -->
	<!-- Tomcat properties                                              -->
	<!-- ============================================================== -->
	<target name="checkTomcat" depends="setTomcat">
		<condition property="tomcat.not.found">
			<or>
				<not>
					<isset property="ext.tomcat.dir" />
				</not>
				<equals arg1="${ext.tomcat.dir}" arg2="" />
			</or>
		</condition>
		<fail message="Tomcat directory is not set in either CATALINA_HOME or ext.tomcat.dir" if="tomcat.not.found" />
		<echo message="Tomcat: ${ext.tomcat.dir}" />
	</target>
	<target name="setTomcat" if="env.CATALINA_HOME">
		<property name="ext.tomcat.dir" value="${env.CATALINA_HOME}" />
	</target>
	
	<target name="addFilters" if="service.properties.file">
		<filter filtersfile="${service.properties.file}"/>
	</target>
	
	<!-- deploy  a gar to tomcat -->
	<target name="deployTomcat" depends="addFilters, all" description="Deploys to CATALINA_HOME (to set the services properties file set the ant command line variable -Dservice.properties.file)">
		<echo message="Deploying service ${service.deployment.path} under Tomcat at ${tomcat.dir}" />

		<property name="service.deployment.dir" value="${tomcat.deploy.dir}/etc/${service.deployment.dir.name}" />
		<!-- prepare the deployment directory -->
		<mkdir dir="${service.deployment.dir}" />
		<!-- prepare the server-config file -->
		<mkdir dir="tmp" />
		<copy overwrite="true" todir="tmp" file="server-config.wsdd" />
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/server-config.wsdd" value="${service.deployment.dir.name}" token="SERVICE-INSTANCE-PATH" />
		<replace file="tmp/server-config.wsdd" value="${service.deployment.prefix}" token="SERVICE-INSTANCE-PREFIX" />
		<replace file="tmp/server-config.wsdd" value="etc/${service.deployment.dir.name}" token="ETC-PATH" />
		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp">
				<include name="server-config.wsdd" />
			</fileset>
		</copy>
		<!-- prepare the jndi file -->
		
		<copy overwrite="true" todir="tmp" file="jndi-config.xml" filtering="true"/>
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/jndi-config.xml" value="${service.deployment.dir.name}" token="SERVICE-INSTANCE-PATH" />
		<replace file="tmp/jndi-config.xml" value="${service.deployment.prefix}" token="SERVICE-INSTANCE-PREFIX" />
		<replace file="tmp/jndi-config.xml" value="etc/${service.deployment.dir.name}" token="ETC-PATH" />
		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp">
				<include name="jndi-config.xml" />
			</fileset>
		</copy>
		<mkdir dir="tmp/etc"/>
		<copy overwrite="true" toDir="tmp/etc">
			<fileset dir="etc">
				<include name="**/*" />
			</fileset>
		</copy>
		<replace file="tmp/etc/registration.xml" value="${index.service.url}" token="INDEX_SERVICE_URL" />
		<!-- Copy skeleton files to Tomcat and rename -->
		<copy overwrite="true" toDir="${service.deployment.dir}">
			<fileset dir="tmp/etc">
				<include name="**/*" />
			</fileset>
		</copy>
		<delete dir="tmp" />
		<!--copy over the jars to the lib -->
		<copy overwrite="true" toDir="${tomcat.deploy.lib.dir}">
			<fileset dir="lib">
				<include name="*" />
			</fileset>
			<fileset dir="build/lib">
				<include name="*" />
			</fileset>
		</copy>
		<!--copy over the schema service files-->
		<copy overwrite="true" toDir="${tomcat.wsrf.schema.dir}/${introduce.skeleton.service.name}">
			<fileset dir="build/schema/${introduce.skeleton.service.name}">
				<include name="**\*" />
			</fileset>
		</copy>
		<delete dir="tmp" />
	</target>
	
	<!-- make deployment configured gar -->
	<target name="createDeploymentGar" depends="all, addFilters">
		
		<echo message="Creating a gar for service ${gar.name}" />
		
		
		<copy todir="${build.lib.dir}">
			<fileset dir="${basedir}/lib">
				<include name="*.jar" />
			</fileset>
		</copy>
		
		<!-- prepare the server-config file -->
		<mkdir dir="tmp" />
		<copy overwrite="true" todir="tmp" file="server-config.wsdd" />
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/server-config.wsdd" value="${introduce.skeleton.service.name}" token="SERVICE-INSTANCE-PATH" />
		<replace file="tmp/server-config.wsdd" value="${service.deployment.prefix}" token="SERVICE-INSTANCE-PREFIX" />
		<replace file="tmp/server-config.wsdd" value="etc/${service.deployment.dir.name}" token="ETC-PATH" />
		<!-- prepare the jndi file -->
		<copy overwrite="true" todir="tmp" filtering="true" file="jndi-config.xml" />
		<!-- replace the config paths in the server deploy file -->
		<replace file="tmp/jndi-config.xml" value="${introduce.skeleton.service.name}" token="SERVICE-INSTANCE-PATH" />
		<replace file="tmp/jndi-config.xml" value="${service.deployment.prefix}" token="SERVICE-INSTANCE-PREFIX" />
		<replace file="tmp/jndi-config.xml" value="etc/${service.deployment.dir.name}" token="ETC-PATH" />
		<mkdir dir="tmp/etc"/>
		<copy overwrite="true" toDir="tmp/etc">
			<fileset dir="etc">
				<include name="**/*" />
			</fileset>
		</copy>
		<replace file="tmp/etc/registration.xml" value="${index.service.url}" token="INDEX_SERVICE_URL" />
		<!-- make the gar file -->
		<ant antfile="${build.packages}" target="makeGar">
			<property name="garserverdeployment.file" value="${basedir}/tmp/server-config.wsdd" />
			<property name="garjndiconfigdeployment.file" value="${basedir}/tmp/jndi-config.xml" />
			<property name="garclientdeployment.file" value="${basedir}/client-config.wsdd" />
			<property name="garclientserverdeployment.file" value="${basedir}/client-server.wsdd" />
			<reference refid="${garjars.id}" />
			<reference refid="${garschema.id}" />
			<reference refid="${garetc.id}" />
		</ant>
		<delete dir="tmp" />
	</target>
	
	
	<!-- deploy a gar to globus -->
	<target name="deployGlobus" depends="checkGlobus, createDeploymentGar" description="Deploys a gar to GLOBUS_LOCATION (to set the services properties file set the ant command line variable -Dservice.properties.file)">
		<echo message="Deploying server to Globus Container" />
		
		<java classname="org.globus.bootstrap.AntBootstrap" fork="yes" failonerror="true">
			<jvmarg value="-DGLOBUS_LOCATION=${ext.globus.dir}" />
			<jvmarg value="-Djava.endorsed.dirs=${ext.globus.dir}/endorsed" />
			<sysproperty key="GLOBUS_LOCATION" value="${ext.globus.dir}" />
			<sysproperty key="ANT_HOME" value="${ant.home}" />
			<arg value="org.globus.tools.gar.DeployGar" />
			<arg value="${gar.name}" />
			<classpath>
				<fileset dir="${ext.globus.dir}/lib">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${ant.library.dir}">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</java>
		
		<delete dir="${gar.name}" />
		<!-- deploy the gar -->
	</target>
</project>
